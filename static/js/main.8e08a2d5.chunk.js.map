{"version":3,"sources":["plot.svg","Header.js","Footer.js","Landing.js","Timer.js","Main.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","rel","Footer","id","title","Landing","React","Component","Predictor","props","state","items","text","handleChange","bind","handleSubmit","onSubmit","this","onChange","value","placeholder","e","setState","target","preventDefault","length","newItem","Date","now","concat","GetValue","map","item","key","parseInt","src","plot","App","About","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,qICiB5BC,G,WAbA,WACX,OACI,4BAAQC,UAAU,aAChB,yBAAKA,UAAU,cACb,uBAAGC,KAAK,WAAWC,IAAI,uBAAvB,QACA,uBAAGD,KAAK,SAASC,IAAI,uBAArB,SACA,uBAAGD,KAAK,4BAA2BC,IAAI,uBAAvC,QACA,uBAAGD,KAAK,eAAeC,IAAI,uBAA3B,aACA,uBAAGD,KAAK,UAAUC,IAAI,uBAAtB,eCCGC,EAVA,WACX,OAAa,6BAASH,UAAU,SAASI,GAAG,UAC5C,gDACA,+DACA,uBAAGH,KAAK,qCAAR,8BACA,uBAAGA,KAAK,8BAA8BI,MAAM,UAA5C,qBACA,uBAAGJ,KAAK,yDAAyDI,MAAM,YAAvE,gCCSWC,EAfC,WACZ,OACI,6BAASN,UAAU,aAAaI,GAAG,WACnC,uBAAGJ,UAAU,eAAb,sCAA8D,6BAA9D,4BAEA,4BAAQA,UAAU,YAChB,kCAAO,uBACPC,KAAK,eACLC,IAAI,uBAFG,uB,sCCPGK,IAAMC,U,uBCEpBC,E,YACF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAEC,MAAO,GAAIC,KAAM,IAChC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,sEAQjB,OACE,yBAAKX,GAAG,cAAcJ,UAAU,eAC5B,wBAAIA,UAAU,cAAd,yBACA,yBAAKA,UAAU,WACX,0BAAMiB,SAAUC,KAAKF,aAAchB,UAAU,aACzC,2BAAOA,UAAU,UACbmB,SAAUD,KAAKJ,aACfM,MAAOF,KAAKP,MAAME,KAClBQ,YAAY,mBAEhB,4BAAQrB,UAAU,WAAlB,QAIJ,kBAAC,EAAD,CAAUY,MAAOM,KAAKP,MAAMC,Y,mCAM3BU,GACXJ,KAAKK,SAAS,CAAEV,KAAMS,EAAEE,OAAOJ,U,mCAGpBE,GAEX,GADAA,EAAEG,iBACGP,KAAKP,MAAME,KAAKa,OAArB,CAGA,IAAMC,EAAU,CACdd,KAAMK,KAAKP,MAAME,KACjBT,GAAIwB,KAAKC,OAEXX,KAAKK,UAAS,SAAAZ,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAMkB,OAAOH,GAC1Bd,KAAM,Y,GA5CUN,IAAMC,WAiDtBuB,E,iLAEF,OACF,2BAAO/B,UAAU,aACjB,+BACI,4BACI,qCACA,6CAGR,+BACCkB,KAAKR,MAAME,MAAMoB,KAAI,SAAAC,GAAI,OACtB,wBAAIC,IAAKD,EAAK7B,IACV,gCAAM6B,EAAKpB,KAAX,KACA,gCAAMsB,SAAS,YAAY,QAAQF,EAAKpB,MAAxC,e,GAdaN,IAAMC,WAuBdC,ICxDFN,EAjBA,WACX,OACI,yBAAKC,GAAG,QAAQJ,UAAU,gBACtB,wBAAIA,UAAU,cAAd,yBACA,6HACqC,6BADrC,sBAEuB,yFAFvB,+BAKA,yBAAKA,UAAU,QACX,yBAAKoC,IAAKC,MACV,+DCODC,MAZf,WACE,OACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACuC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVAC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAERJ,GDoHM,kBAAmBK,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8e08a2d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plot.fe62e76d.svg\";","import React from \"react\";\r\nimport './App.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"HeaderBox\">\r\n          <nav className=\"Navigation\">\r\n            <a href=\"#landing\" rel=\"noopener noreferrer\">Home</a>\r\n            <a href=\"#about\" rel=\"noopener noreferrer\">About</a>\r\n            <a href=\"http://emichris.github.io\"rel=\"noopener noreferrer\">Home</a>\r\n            <a href=\"#mainsection\" rel=\"noopener noreferrer\">Predictor</a>\r\n            <a href=\"#footer\" rel=\"noopener noreferrer\">Contact</a>\r\n          </nav>\r\n        </header>\r\n        )};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './App.css';\r\n\r\nconst Footer = () => {\r\n    return (     <section className=\"footer\" id=\"footer\">\r\n    <h1>Christian Emiyah</h1>\r\n    <a>Software Engineer/Data Scientist</a>\r\n    <a href=\"mailto:christian.emiyah@gmail.com\">christian.emiyah@gmail.com</a>\r\n    <a href=\"https://github.com/emichris\" title=\"GitHub\">Github: @emichris</a> \r\n    <a href=\"https://www.linkedin.com/in/christian-emiyah-17a5725b/\" title=\"LinkedIn\">LinkedIn: Christian.Emiyah</a> \r\n</section>\r\n)};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport './App.css';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <section className=\"App-header\" id=\"landing\">\r\n        <p className=\"Description\"> Los Angeles Crime Count Predictor <br /> \r\n        Using Linear Regression </p>\r\n        <button className=\"BtnStart\">\r\n          <code> <a \r\n          href=\"#mainsection\"\r\n          rel=\"noopener noreferrer\"\r\n          > Run Predictor </a></code>\r\n        </button>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from \"react\";\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 0 };\r\n    }\r\n  \r\n    tick() {\r\n      this.setState(state => ({\r\n        seconds: state.seconds + 1\r\n      }));\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          Seconds: {this.state.seconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Timer;\r\n  ","import React from \"react\";\r\nimport \"./App.css\"\r\nimport plot from \"./plot.svg\"\r\n\r\nclass Predictor extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id=\"mainsection\" className=\"mainsection\">\r\n            <h3 className=\"mainHeader\">CRIME COUNT PREDICTOR</h3>\r\n            <div className=\"mainsub\">\r\n                <form onSubmit={this.handleSubmit} className=\"FormInput\">\r\n                    <input className=\"FormBar\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.text}\r\n                        placeholder=\"Enter a year..\"\r\n                    />\r\n                    <button className=\"FormBtn\" >\r\n                        ADD\r\n                    </button>\r\n                </form>\r\n                <GetValue items={this.state.items} />\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (!this.state.text.length) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n  \r\n  class GetValue extends React.Component {\r\n    render() {\r\n      return (\r\n    <table className=\"FormTable\">\r\n    <thead>\r\n        <tr>\r\n            <th > Year</th>\r\n            <th > Prediction</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n    {this.props.items.map(item => (\r\n        <tr key={item.id}>\r\n            <th> {item.text} </th>\r\n            <td> {parseInt(16900443.58-8323.53*item.text)} </td>\r\n        </tr>\r\n    ))}\r\n    </tbody>\r\n</table>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Predictor;","import React from \"react\";\r\nimport plot from \"./plot.svg\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"about\" className=\"aboutsection\">\r\n            <h3 className=\"mainHeader\">CRIME COUNT PREDICTOR</h3>\r\n            <p>The dataset analyzed reflects arrest incidents in the City of \r\n                Los Angeles dating back to 2010. <br /> \r\n                The model found is <code> ùë¶ = ‚àí8323.53ùë• + 16900443.58</code> with R-squared score 0.940\r\n            </p>\r\n            \r\n            <div className=\"plot\"> \r\n                <img src={plot} /> \r\n                <p>Linear Fitting of Crime Count</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport Landing from \"./Landing\";\nimport Timer from \"./Timer\";\nimport Predictor from \"./Main\";\nimport About from \"./About\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Landing />\n      <About />\n      <Predictor />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n    <Router> \n        <App />\n    </Router>, \nrootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}